{"ast":null,"code":"var _jsxFileName = \"/home/maryoma/workspace/taskmanagment/frontend/src/components/UserManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserManagement({\n  tasks,\n  onAddTask\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/users');\n      setUsers(response.data || []);\n    } catch (error) {\n      console.error('Error fetching users', error);\n    }\n  };\n  const handleAssignTask = async (userId, taskId) => {\n    try {\n      await axios.post(`http://localhost:8080/api/users/${userId}/tasks/${taskId}`);\n      fetchUsers();\n    } catch (error) {\n      console.error('Error assigning task', error);\n    }\n  };\n  const handleAddTask = () => {\n    onAddTask();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assign Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: user.tasks.map(taskId => {\n                var _tasks$find;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: ((_tasks$find = tasks.find(task => task.id === taskId)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.title) || 'Unknown Task'\n                }, taskId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => handleAssignTask(user.id, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: task.id,\n                children: task.title\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(UserManagement, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserManagement","tasks","onAddTask","_s","users","setUsers","fetchUsers","response","get","data","error","console","handleAssignTask","userId","taskId","post","handleAddTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","user","username","role","_tasks$find","find","task","id","title","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/home/maryoma/workspace/taskmanagment/frontend/src/components/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserManagement.css';\n\nfunction UserManagement({ tasks, onAddTask }) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/users');\n      setUsers(response.data || []);\n    } catch (error) {\n      console.error('Error fetching users', error);\n    }\n  };\n\n  const handleAssignTask = async (userId, taskId) => {\n    try {\n      await axios.post(`http://localhost:8080/api/users/${userId}/tasks/${taskId}`);\n      fetchUsers();\n    } catch (error) {\n      console.error('Error assigning task', error);\n    }\n  };\n\n  const handleAddTask = () => {\n    onAddTask();\n  };\n\n  return (\n    <div className=\"user-management\">\n      <h2>User Management</h2>\n      <button onClick={handleAddTask}>Add Task</button>\n      <table>\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Role</th>\n            <th>Tasks</th>\n            <th>Assign Task</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr key={user.id}>\n              <td>{user.username}</td>\n              <td>{user.role}</td>\n              <td>\n                <ul>\n                  {user.tasks.map(taskId => (\n                    <li key={taskId}>{tasks.find(task => task.id === taskId)?.title || 'Unknown Task'}</li>\n                  ))}\n                </ul>\n              </td>\n              <td>\n                <select onChange={(e) => handleAssignTask(user.id, e.target.value)}>\n                  <option value=\"\">Select Task</option>\n                  {tasks.map(task => (\n                    <option key={task.id} value={task.id}>{task.title}</option>\n                  ))}\n                </select>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UserManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}